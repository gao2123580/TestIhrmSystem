2020-03-28 16:00:12,258 INFO [root] [__init__.py(<module>:16)] - test:-------打印日志信息--------
2020-03-28 16:00:12,422 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': True, 'code': 10000, 'message': '操作成功！', 'data': '566b9110-6bd1-4a40-980e-765df10303c6'}
2020-03-28 16:00:12,493 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:12,560 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:12,631 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:12,769 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:12,839 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:12,911 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:12,985 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': True, 'code': 10000, 'message': '操作成功！', 'data': '202c0c51-a56a-44c0-befd-ea7f3d6c7efe'}
2020-03-28 16:00:13,056 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:13,127 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:13,196 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2020-03-28 16:00:13,268 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:13,339 INFO [root] [test_emp02.py(test01_emp_login_succeed:32)] - 员工模块登录的响应结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': 'ca2f3965-5a8c-4285-b7d1-60d7518a80be'}
2020-03-28 16:00:13,339 INFO [root] [test_emp02.py(test01_emp_login_succeed:38)] - 请求头部数据为:{'Content-Type': 'application/json', 'Authorization': 'Bearer ca2f3965-5a8c-4285-b7d1-60d7518a80be'}
2020-03-28 16:00:13,414 INFO [root] [test_emp02.py(test02_add_emp:50)] - 添加员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1243810104612311040'}}
2020-03-28 16:00:13,414 INFO [root] [test_emp02.py(test02_add_emp:53)] - 添加员工返回的json数据:{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1243810104612311040'}}
2020-03-28 16:00:13,415 INFO [root] [test_emp02.py(test02_add_emp:57)] - 获取员工的id为：1243810104612311040
2020-03-28 16:00:13,486 INFO [root] [test_emp02.py(test03_quer_emp:69)] - 查询员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1243810104612311040', 'mobile': '14790124444', 'username': '我是你的超级英雄007', 'password': '8ecda3c21737968c15223ac1f179d156', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1226092852421177344', 'timeOfEntry': '2020-03-16T00:00:00.000+0000', 'formOfEmployment': 2, 'workNumber': None, 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2020-03-15T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': 'snowsnow', 'roleIds': [], 'staffPhoto': None}}
2020-03-28 16:00:13,564 INFO [root] [test_emp02.py(test04_modify_emp:79)] - 修改员工返回的结果：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1243810104612311040'}}
2020-03-28 16:00:13,691 INFO [root] [test_emp02.py(test04_modify_emp:87)] - 打印sql语句select username from bs_user where id=1243810104612311040
2020-03-28 16:00:13,734 INFO [root] [test_emp02.py(test04_modify_emp:91)] - 执行sql语句查询的结果为('奥特曼',)
2020-03-28 16:00:13,869 INFO [root] [test_emp02.py(test05_delete_emp:106)] - 删除响应结果:{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}
2020-03-28 16:00:38,201 INFO [root] [__init__.py(<module>:16)] - test:-------打印日志信息--------
2020-03-28 16:00:38,374 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': True, 'code': 10000, 'message': '操作成功！', 'data': '2f5f2599-9348-4d8a-b38c-43492e5aaf27'}
2020-03-28 16:00:38,446 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:38,517 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:38,587 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:38,659 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:38,728 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:38,802 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:38,872 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': True, 'code': 10000, 'message': '操作成功！', 'data': '147b41a4-bfc1-416c-bb59-03fc512f4193'}
2020-03-28 16:00:38,941 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:39,010 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:39,080 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 99999, 'message': '抱歉，系统繁忙，请稍后重试！', 'data': None}
2020-03-28 16:00:39,153 INFO [root] [test_login_parameterized.py(test01_login:34)] - 登录响应的结果:{'success': False, 'code': 20001, 'message': '用户名或密码错误', 'data': None}
2020-03-28 16:00:39,230 INFO [root] [test_emp02.py(test01_emp_login_succeed:32)] - 员工模块登录的响应结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': '5618bafc-2d65-4077-8a13-14774bc83aa2'}
2020-03-28 16:00:39,230 INFO [root] [test_emp02.py(test01_emp_login_succeed:38)] - 请求头部数据为:{'Content-Type': 'application/json', 'Authorization': 'Bearer 5618bafc-2d65-4077-8a13-14774bc83aa2'}
2020-03-28 16:00:39,304 INFO [root] [test_emp02.py(test02_add_emp:50)] - 添加员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1243810213202841600'}}
2020-03-28 16:00:39,304 INFO [root] [test_emp02.py(test02_add_emp:53)] - 添加员工返回的json数据:{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1243810213202841600'}}
2020-03-28 16:00:39,305 INFO [root] [test_emp02.py(test02_add_emp:57)] - 获取员工的id为：1243810213202841600
2020-03-28 16:00:39,375 INFO [root] [test_emp02.py(test03_quer_emp:69)] - 查询员工的结果为：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1243810213202841600', 'mobile': '14790124444', 'username': '我是你的超级英雄007', 'password': '8ecda3c21737968c15223ac1f179d156', 'enableState': 1, 'createTime': None, 'companyId': '1', 'companyName': '传智播客', 'departmentId': '1226092852421177344', 'timeOfEntry': '2020-03-16T00:00:00.000+0000', 'formOfEmployment': 2, 'workNumber': None, 'formOfManagement': None, 'workingCity': None, 'correctionTime': '2020-03-15T16:00:00.000+0000', 'inServiceStatus': None, 'departmentName': 'snowsnow', 'roleIds': [], 'staffPhoto': None}}
2020-03-28 16:00:39,450 INFO [root] [test_emp02.py(test04_modify_emp:79)] - 修改员工返回的结果：{'success': True, 'code': 10000, 'message': '操作成功！', 'data': {'id': '1243810213202841600'}}
2020-03-28 16:00:39,581 INFO [root] [test_emp02.py(test04_modify_emp:87)] - 打印sql语句select username from bs_user where id=1243810213202841600
2020-03-28 16:00:39,623 INFO [root] [test_emp02.py(test04_modify_emp:91)] - 执行sql语句查询的结果为('奥特曼',)
2020-03-28 16:00:39,698 INFO [root] [test_emp02.py(test05_delete_emp:106)] - 删除响应结果:{'success': True, 'code': 10000, 'message': '操作成功！', 'data': None}
